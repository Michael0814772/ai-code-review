spring.application.name=ai-code-review

#database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=true

spring.jackson.mapper.accept_case_insensitive_properties=true

spring.jpa.open-in-view=false

#port
server.port=8085

spring.datasource.tomcat.initial-size=5
spring.datasource.tomcat.max-active=10
spring.datasource.tomcat.max-idle=5
spring.datasource.tomcat.min-idle=2
spring.datasource.tomcat.max-wait=20000

# Specify the path of the OpenAPI documentation
springdoc.api-docs.path=/api-docs

# Specify the path of the Swagger UI
springdoc.swagger-ui.path=/swagger-ui.html

# Enable or disable Swagger UI
springdoc.swagger-ui.enabled=true


#Context Path
server.servlet.context-path=/ai-code-review

#open ai values
open-ai.store=true
open-ai.userMessage=Review this code and return a JSON object with 'score' (0-100) and 'recommendations with code sample added for each recommendations' (array of suggestions). Return response **strictly** as a JSON object without markdown or formatting. Example: {"score": 85, "recommendations": ["Improve variable names", "Avoid nested loops"] }" Code:
open-ai.userMessage1=Review the following code and return a JSON object with 'score' (integer between 0-100) and 'recommendations' (a brief summary of improvements):
open-ai.userMessage2=Return response as JSON strictly in this format:{"score": 85, "recommendations": "Use better variable names and avoid redundant loops." } and make recommendations an array because recommendations can be more than one
open-ai.post=POST
open-ai.message=You are a code review assistant. Analyze the code for best practices, performance, and security issues.
#open-ai.message=You are a code review assistant. Analyze code for best practices, performance, and security. And give score at the end between 1 - 100 (format of score should be in ###score: 80 and ###recommendation:) and put in a new line"
open-ai.adminRole=system

#http time in seconds
http-call.timeout=60000
http-call.responseTimeout=60
http-call.readTimeOut=60
http-call.writeTimeout=60
